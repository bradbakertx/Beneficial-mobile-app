{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":34,"index":91}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}},{"name":"./ExpoLocalAuthentication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":92},"end":{"line":3,"column":64,"index":156}}],"key":"wO9yrMIaEu6Su2W3h/wpxu7Gg+g=","exportNames":["*"],"imports":1}},{"name":"./LocalAuthentication.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":157},"end":{"line":4,"column":81,"index":238}}],"key":"lDec6gGZYHDsSqpXcagYVqewIdo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthenticationType\", {\n    enumerable: true,\n    get: function () {\n      return _LocalAuthenticationTypes.AuthenticationType;\n    }\n  });\n  Object.defineProperty(exports, \"SecurityLevel\", {\n    enumerable: true,\n    get: function () {\n      return _LocalAuthenticationTypes.SecurityLevel;\n    }\n  });\n  exports.hasHardwareAsync = hasHardwareAsync;\n  exports.supportedAuthenticationTypesAsync = supportedAuthenticationTypesAsync;\n  exports.isEnrolledAsync = isEnrolledAsync;\n  exports.getEnrolledLevelAsync = getEnrolledLevelAsync;\n  exports.authenticateAsync = authenticateAsync;\n  exports.cancelAuthenticate = cancelAuthenticate;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _invariant = require(_dependencyMap[1], \"invariant\");\n  var invariant = _interopDefault(_invariant);\n  var _ExpoLocalAuthentication = require(_dependencyMap[2], \"./ExpoLocalAuthentication\");\n  var ExpoLocalAuthentication = _interopDefault(_ExpoLocalAuthentication);\n  var _LocalAuthenticationTypes = require(_dependencyMap[3], \"./LocalAuthentication.types\");\n  // @needsAudit\n  /**\n   * Determine whether a face or fingerprint scanner is available on the device.\n   * @return Returns a promise which fulfils with a `boolean` value indicating whether a face or\n   * fingerprint scanner is available on this device.\n   */\n  async function hasHardwareAsync() {\n    if (!ExpoLocalAuthentication.default.hasHardwareAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'hasHardwareAsync');\n    }\n    return await ExpoLocalAuthentication.default.hasHardwareAsync();\n  }\n  // @needsAudit\n  /**\n   * Determine what kinds of authentications are available on the device.\n   * @return Returns a promise which fulfils to an array containing [`AuthenticationType`s](#authenticationtype).\n   *\n   * Devices can support multiple authentication methods - i.e. `[1,2]` means the device supports both\n   * fingerprint and facial recognition. If none are supported, this method returns an empty array.\n   */\n  async function supportedAuthenticationTypesAsync() {\n    if (!ExpoLocalAuthentication.default.supportedAuthenticationTypesAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'supportedAuthenticationTypesAsync');\n    }\n    return await ExpoLocalAuthentication.default.supportedAuthenticationTypesAsync();\n  }\n  // @needsAudit\n  /**\n   * Determine whether the device has saved fingerprints or facial data to use for authentication.\n   * @return Returns a promise which fulfils to `boolean` value indicating whether the device has\n   * saved fingerprints or facial data for authentication.\n   */\n  async function isEnrolledAsync() {\n    if (!ExpoLocalAuthentication.default.isEnrolledAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'isEnrolledAsync');\n    }\n    return await ExpoLocalAuthentication.default.isEnrolledAsync();\n  }\n  // @needsAudit\n  /**\n   * Determine what kind of authentication is enrolled on the device.\n   * @return Returns a promise which fulfils with [`SecurityLevel`](#securitylevel).\n   * > **Note:** On Android devices prior to M, `SECRET` can be returned if only the SIM lock has been\n   * enrolled, which is not the method that [`authenticateAsync`](#localauthenticationauthenticateasyncoptions)\n   * prompts.\n   */\n  async function getEnrolledLevelAsync() {\n    if (!ExpoLocalAuthentication.default.getEnrolledLevelAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'getEnrolledLevelAsync');\n    }\n    return await ExpoLocalAuthentication.default.getEnrolledLevelAsync();\n  }\n  // @needsAudit\n  /**\n   * Attempts to authenticate via Fingerprint/TouchID (or FaceID if available on the device).\n   * > **Note:** Apple requires apps which use FaceID to provide a description of why they use this API.\n   * If you try to use FaceID on an iPhone with FaceID without providing `infoPlist.NSFaceIDUsageDescription`\n   * in `app.json`, the module will authenticate using device passcode. For more information about\n   * usage descriptions on iOS, see [permissions guide](/guides/permissions/#ios).\n   * @param options\n   * @return Returns a promise which fulfils with [`LocalAuthenticationResult`](#localauthenticationresult).\n   */\n  async function authenticateAsync(options = {}) {\n    if (!ExpoLocalAuthentication.default.authenticateAsync) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'authenticateAsync');\n    }\n    if (options.hasOwnProperty('promptMessage')) {\n      (0, invariant.default)(typeof options.promptMessage === 'string' && options.promptMessage.length, 'LocalAuthentication.authenticateAsync : `options.promptMessage` must be a non-empty string.');\n    }\n    const promptMessage = options.promptMessage || 'Authenticate';\n    const cancelLabel = options.cancelLabel || 'Cancel';\n    const result = await ExpoLocalAuthentication.default.authenticateAsync({\n      ...options,\n      promptMessage,\n      cancelLabel\n    });\n    return result;\n  }\n  // @needsAudit\n  /**\n   * Cancels authentication flow.\n   * @platform android\n   */\n  async function cancelAuthenticate() {\n    if (!ExpoLocalAuthentication.default.cancelAuthenticate) {\n      throw new _expoModulesCore.UnavailabilityError('expo-local-authentication', 'cancelAuthenticate');\n    }\n    await ExpoLocalAuthentication.default.cancelAuthenticate();\n  }\n});","lineCount":125,"map":[[12,2,5,0,"Object"],[12,8,5,0],[12,9,5,0,"defineProperty"],[12,23,5,0],[12,24,5,0,"exports"],[12,31,5,0],[13,4,5,0,"enumerable"],[13,14,5,0],[14,4,5,0,"get"],[14,7,5,0],[14,18,5,0,"get"],[14,19,5,0],[15,6,5,0],[15,13,5,9,"AuthenticationType"],[15,38,5,27],[15,39,5,27,"AuthenticationType"],[15,57,5,27],[16,4,5,27],[17,2,5,27],[18,2,5,0,"Object"],[18,8,5,0],[18,9,5,0,"defineProperty"],[18,23,5,0],[18,24,5,0,"exports"],[18,31,5,0],[19,4,5,0,"enumerable"],[19,14,5,0],[20,4,5,0,"get"],[20,7,5,0],[20,18,5,0,"get"],[20,19,5,0],[21,6,5,0],[21,13,5,29,"SecurityLevel"],[21,38,5,42],[21,39,5,42,"SecurityLevel"],[21,52,5,42],[22,4,5,42],[23,2,5,42],[24,2,12,0,"exports"],[24,9,12,0],[24,10,12,0,"hasHardwareAsync"],[24,26,12,0],[24,29,12,0,"hasHardwareAsync"],[24,45,12,0],[25,2,26,0,"exports"],[25,9,26,0],[25,10,26,0,"supportedAuthenticationTypesAsync"],[25,43,26,0],[25,46,26,0,"supportedAuthenticationTypesAsync"],[25,79,26,0],[26,2,38,0,"exports"],[26,9,38,0],[26,10,38,0,"isEnrolledAsync"],[26,25,38,0],[26,28,38,0,"isEnrolledAsync"],[26,43,38,0],[27,2,52,0,"exports"],[27,9,52,0],[27,10,52,0,"getEnrolledLevelAsync"],[27,31,52,0],[27,34,52,0,"getEnrolledLevelAsync"],[27,55,52,0],[28,2,68,0,"exports"],[28,9,68,0],[28,10,68,0,"authenticateAsync"],[28,27,68,0],[28,30,68,0,"authenticateAsync"],[28,47,68,0],[29,2,89,0,"exports"],[29,9,89,0],[29,10,89,0,"cancelAuthenticate"],[29,28,89,0],[29,31,89,0,"cancelAuthenticate"],[29,49,89,0],[30,2,1,0],[30,6,1,0,"_expoModulesCore"],[30,22,1,0],[30,25,1,0,"require"],[30,32,1,0],[30,33,1,0,"_dependencyMap"],[30,47,1,0],[31,2,2,0],[31,6,2,0,"_invariant"],[31,16,2,0],[31,19,2,0,"require"],[31,26,2,0],[31,27,2,0,"_dependencyMap"],[31,41,2,0],[32,2,2,0],[32,6,2,0,"invariant"],[32,15,2,0],[32,18,2,0,"_interopDefault"],[32,33,2,0],[32,34,2,0,"_invariant"],[32,44,2,0],[33,2,3,0],[33,6,3,0,"_ExpoLocalAuthentication"],[33,30,3,0],[33,33,3,0,"require"],[33,40,3,0],[33,41,3,0,"_dependencyMap"],[33,55,3,0],[34,2,3,0],[34,6,3,0,"ExpoLocalAuthentication"],[34,29,3,0],[34,32,3,0,"_interopDefault"],[34,47,3,0],[34,48,3,0,"_ExpoLocalAuthentication"],[34,72,3,0],[35,2,4,0],[35,6,4,0,"_LocalAuthenticationTypes"],[35,31,4,0],[35,34,4,0,"require"],[35,41,4,0],[35,42,4,0,"_dependencyMap"],[35,56,4,0],[36,2,6,0],[37,2,7,0],[38,0,8,0],[39,0,9,0],[40,0,10,0],[41,0,11,0],[42,2,12,7],[42,17,12,22,"hasHardwareAsync"],[42,33,12,38,"hasHardwareAsync"],[42,34,12,38],[42,36,12,41],[43,4,13,4],[43,8,13,8],[43,9,13,9,"ExpoLocalAuthentication"],[43,32,13,32],[43,33,13,32,"default"],[43,40,13,32],[43,41,13,33,"hasHardwareAsync"],[43,57,13,49],[43,59,13,51],[44,6,14,8],[44,12,14,14],[44,16,14,18,"UnavailabilityError"],[44,32,14,37],[44,33,14,37,"UnavailabilityError"],[44,52,14,37],[44,53,14,38],[44,80,14,65],[44,82,14,67],[44,100,14,85],[44,101,14,86],[45,4,15,4],[46,4,16,4],[46,11,16,11],[46,17,16,17,"ExpoLocalAuthentication"],[46,40,16,40],[46,41,16,40,"default"],[46,48,16,40],[46,49,16,41,"hasHardwareAsync"],[46,65,16,57],[46,66,16,58],[46,67,16,59],[47,2,17,0],[48,2,18,0],[49,2,19,0],[50,0,20,0],[51,0,21,0],[52,0,22,0],[53,0,23,0],[54,0,24,0],[55,0,25,0],[56,2,26,7],[56,17,26,22,"supportedAuthenticationTypesAsync"],[56,50,26,55,"supportedAuthenticationTypesAsync"],[56,51,26,55],[56,53,26,58],[57,4,27,4],[57,8,27,8],[57,9,27,9,"ExpoLocalAuthentication"],[57,32,27,32],[57,33,27,32,"default"],[57,40,27,32],[57,41,27,33,"supportedAuthenticationTypesAsync"],[57,74,27,66],[57,76,27,68],[58,6,28,8],[58,12,28,14],[58,16,28,18,"UnavailabilityError"],[58,32,28,37],[58,33,28,37,"UnavailabilityError"],[58,52,28,37],[58,53,28,38],[58,80,28,65],[58,82,28,67],[58,117,28,102],[58,118,28,103],[59,4,29,4],[60,4,30,4],[60,11,30,11],[60,17,30,17,"ExpoLocalAuthentication"],[60,40,30,40],[60,41,30,40,"default"],[60,48,30,40],[60,49,30,41,"supportedAuthenticationTypesAsync"],[60,82,30,74],[60,83,30,75],[60,84,30,76],[61,2,31,0],[62,2,32,0],[63,2,33,0],[64,0,34,0],[65,0,35,0],[66,0,36,0],[67,0,37,0],[68,2,38,7],[68,17,38,22,"isEnrolledAsync"],[68,32,38,37,"isEnrolledAsync"],[68,33,38,37],[68,35,38,40],[69,4,39,4],[69,8,39,8],[69,9,39,9,"ExpoLocalAuthentication"],[69,32,39,32],[69,33,39,32,"default"],[69,40,39,32],[69,41,39,33,"isEnrolledAsync"],[69,56,39,48],[69,58,39,50],[70,6,40,8],[70,12,40,14],[70,16,40,18,"UnavailabilityError"],[70,32,40,37],[70,33,40,37,"UnavailabilityError"],[70,52,40,37],[70,53,40,38],[70,80,40,65],[70,82,40,67],[70,99,40,84],[70,100,40,85],[71,4,41,4],[72,4,42,4],[72,11,42,11],[72,17,42,17,"ExpoLocalAuthentication"],[72,40,42,40],[72,41,42,40,"default"],[72,48,42,40],[72,49,42,41,"isEnrolledAsync"],[72,64,42,56],[72,65,42,57],[72,66,42,58],[73,2,43,0],[74,2,44,0],[75,2,45,0],[76,0,46,0],[77,0,47,0],[78,0,48,0],[79,0,49,0],[80,0,50,0],[81,0,51,0],[82,2,52,7],[82,17,52,22,"getEnrolledLevelAsync"],[82,38,52,43,"getEnrolledLevelAsync"],[82,39,52,43],[82,41,52,46],[83,4,53,4],[83,8,53,8],[83,9,53,9,"ExpoLocalAuthentication"],[83,32,53,32],[83,33,53,32,"default"],[83,40,53,32],[83,41,53,33,"getEnrolledLevelAsync"],[83,62,53,54],[83,64,53,56],[84,6,54,8],[84,12,54,14],[84,16,54,18,"UnavailabilityError"],[84,32,54,37],[84,33,54,37,"UnavailabilityError"],[84,52,54,37],[84,53,54,38],[84,80,54,65],[84,82,54,67],[84,105,54,90],[84,106,54,91],[85,4,55,4],[86,4,56,4],[86,11,56,11],[86,17,56,17,"ExpoLocalAuthentication"],[86,40,56,40],[86,41,56,40,"default"],[86,48,56,40],[86,49,56,41,"getEnrolledLevelAsync"],[86,70,56,62],[86,71,56,63],[86,72,56,64],[87,2,57,0],[88,2,58,0],[89,2,59,0],[90,0,60,0],[91,0,61,0],[92,0,62,0],[93,0,63,0],[94,0,64,0],[95,0,65,0],[96,0,66,0],[97,0,67,0],[98,2,68,7],[98,17,68,22,"authenticateAsync"],[98,34,68,39,"authenticateAsync"],[98,35,68,40,"options"],[98,42,68,47],[98,45,68,50],[98,46,68,51],[98,47,68,52],[98,49,68,54],[99,4,69,4],[99,8,69,8],[99,9,69,9,"ExpoLocalAuthentication"],[99,32,69,32],[99,33,69,32,"default"],[99,40,69,32],[99,41,69,33,"authenticateAsync"],[99,58,69,50],[99,60,69,52],[100,6,70,8],[100,12,70,14],[100,16,70,18,"UnavailabilityError"],[100,32,70,37],[100,33,70,37,"UnavailabilityError"],[100,52,70,37],[100,53,70,38],[100,80,70,65],[100,82,70,67],[100,101,70,86],[100,102,70,87],[101,4,71,4],[102,4,72,4],[102,8,72,8,"options"],[102,15,72,15],[102,16,72,16,"hasOwnProperty"],[102,30,72,30],[102,31,72,31],[102,46,72,46],[102,47,72,47],[102,49,72,49],[103,6,73,8],[103,10,73,8,"invariant"],[103,19,73,17],[103,20,73,17,"default"],[103,27,73,17],[103,29,73,18],[103,36,73,25,"options"],[103,43,73,32],[103,44,73,33,"promptMessage"],[103,57,73,46],[103,62,73,51],[103,70,73,59],[103,74,73,63,"options"],[103,81,73,70],[103,82,73,71,"promptMessage"],[103,95,73,84],[103,96,73,85,"length"],[103,102,73,91],[103,104,73,93],[103,197,73,186],[103,198,73,187],[104,4,74,4],[105,4,75,4],[105,10,75,10,"promptMessage"],[105,23,75,23],[105,26,75,26,"options"],[105,33,75,33],[105,34,75,34,"promptMessage"],[105,47,75,47],[105,51,75,51],[105,65,75,65],[106,4,76,4],[106,10,76,10,"cancelLabel"],[106,21,76,21],[106,24,76,24,"options"],[106,31,76,31],[106,32,76,32,"cancelLabel"],[106,43,76,43],[106,47,76,47],[106,55,76,55],[107,4,77,4],[107,10,77,10,"result"],[107,16,77,16],[107,19,77,19],[107,25,77,25,"ExpoLocalAuthentication"],[107,48,77,48],[107,49,77,48,"default"],[107,56,77,48],[107,57,77,49,"authenticateAsync"],[107,74,77,66],[107,75,77,67],[108,6,78,8],[108,9,78,11,"options"],[108,16,78,18],[109,6,79,8,"promptMessage"],[109,19,79,21],[110,6,80,8,"cancelLabel"],[111,4,81,4],[111,5,81,5],[111,6,81,6],[112,4,82,4],[112,11,82,11,"result"],[112,17,82,17],[113,2,83,0],[114,2,84,0],[115,2,85,0],[116,0,86,0],[117,0,87,0],[118,0,88,0],[119,2,89,7],[119,17,89,22,"cancelAuthenticate"],[119,35,89,40,"cancelAuthenticate"],[119,36,89,40],[119,38,89,43],[120,4,90,4],[120,8,90,8],[120,9,90,9,"ExpoLocalAuthentication"],[120,32,90,32],[120,33,90,32,"default"],[120,40,90,32],[120,41,90,33,"cancelAuthenticate"],[120,59,90,51],[120,61,90,53],[121,6,91,8],[121,12,91,14],[121,16,91,18,"UnavailabilityError"],[121,32,91,37],[121,33,91,37,"UnavailabilityError"],[121,52,91,37],[121,53,91,38],[121,80,91,65],[121,82,91,67],[121,102,91,87],[121,103,91,88],[122,4,92,4],[123,4,93,4],[123,10,93,10,"ExpoLocalAuthentication"],[123,33,93,33],[123,34,93,33,"default"],[123,41,93,33],[123,42,93,34,"cancelAuthenticate"],[123,60,93,52],[123,61,93,53],[123,62,93,54],[124,2,94,0],[125,0,94,1],[125,3]],"functionMap":{"names":["<global>","hasHardwareAsync","supportedAuthenticationTypesAsync","isEnrolledAsync","getEnrolledLevelAsync","authenticateAsync","cancelAuthenticate"],"mappings":"AAA;OCW;CDK;OES;CFK;OGO;CHK;OIS;CJK;OKW;CLe;OMM;CNK"},"hasCjsExports":false},"type":"js/module"}]}