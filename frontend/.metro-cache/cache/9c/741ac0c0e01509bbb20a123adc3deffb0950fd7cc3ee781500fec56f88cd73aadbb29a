{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":49,"index":260}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"ForceTouchGesture\", {\n    enumerable: true,\n    get: function () {\n      return ForceTouchGesture;\n    }\n  });\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        forceChange: current.force\n      };\n    } else {\n      changePayload = {\n        forceChange: current.force - previous.force\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  }\n  class ForceTouchGesture extends _gesture.ContinousBaseGesture {\n    constructor() {\n      super();\n      _defineProperty(this, \"config\", {});\n      this.handlerName = 'ForceTouchGestureHandler';\n    }\n    /**\n     * A minimal pressure that is required before gesture can activate.\n     * Should be a value from range [0.0, 1.0]. Default is 0.2.\n     * @param force\n     */\n\n    minForce(force) {\n      this.config.minForce = force;\n      return this;\n    }\n    /**\n     * A maximal pressure that could be applied for gesture.\n     * If the pressure is greater, gesture fails. Should be a value from range [0.0, 1.0].\n     * @param force\n     */\n\n    maxForce(force) {\n      this.config.maxForce = force;\n      return this;\n    }\n    /**\n     * Value defining if haptic feedback has to be performed on activation.\n     * @param value\n     */\n\n    feedbackOnActivation(value) {\n      this.config.feedbackOnActivation = value;\n      return this;\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, ForceTouchGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n});","lineCount":86,"map":[[7,2,25,0,"Object"],[7,8,25,0],[7,9,25,0,"defineProperty"],[7,23,25,0],[7,24,25,0,"exports"],[7,31,25,0],[8,4,25,0,"enumerable"],[8,14,25,0],[9,4,25,0,"get"],[9,7,25,0],[9,18,25,0,"get"],[9,19,25,0],[10,6,25,0],[10,13,25,0,"ForceTouchGesture"],[10,30,25,0],[11,4,25,0],[12,2,25,0],[13,2,3,0],[13,6,3,0,"_gesture"],[13,14,3,0],[13,17,3,0,"require"],[13,24,3,0],[13,25,3,0,"_dependencyMap"],[13,39,3,0],[14,2,1,0],[14,11,1,9,"_defineProperty"],[14,26,1,24,"_defineProperty"],[14,27,1,25,"obj"],[14,30,1,28],[14,32,1,30,"key"],[14,35,1,33],[14,37,1,35,"value"],[14,42,1,40],[14,44,1,42],[15,4,1,44],[15,8,1,48,"key"],[15,11,1,51],[15,15,1,55,"obj"],[15,18,1,58],[15,20,1,60],[16,6,1,62,"Object"],[16,12,1,68],[16,13,1,69,"defineProperty"],[16,27,1,83],[16,28,1,84,"obj"],[16,31,1,87],[16,33,1,89,"key"],[16,36,1,92],[16,38,1,94],[17,8,1,96,"value"],[17,13,1,101],[17,15,1,103,"value"],[17,20,1,108],[18,8,1,110,"enumerable"],[18,18,1,120],[18,20,1,122],[18,24,1,126],[19,8,1,128,"configurable"],[19,20,1,140],[19,22,1,142],[19,26,1,146],[20,8,1,148,"writable"],[20,16,1,156],[20,18,1,158],[21,6,1,163],[21,7,1,164],[21,8,1,165],[22,4,1,167],[22,5,1,168],[22,11,1,174],[23,6,1,176,"obj"],[23,9,1,179],[23,10,1,180,"key"],[23,13,1,183],[23,14,1,184],[23,17,1,187,"value"],[23,22,1,192],[24,4,1,194],[25,4,1,196],[25,11,1,203,"obj"],[25,14,1,206],[26,2,1,208],[27,2,5,0],[27,11,5,9,"changeEventCalculator"],[27,32,5,30,"changeEventCalculator"],[27,33,5,31,"current"],[27,40,5,38],[27,42,5,40,"previous"],[27,50,5,48],[27,52,5,50],[28,4,6,2],[28,13,6,11],[30,4,8,2],[30,8,8,6,"changePayload"],[30,21,8,19],[31,4,10,2],[31,8,10,6,"previous"],[31,16,10,14],[31,21,10,19,"undefined"],[31,30,10,28],[31,32,10,30],[32,6,11,4,"changePayload"],[32,19,11,17],[32,22,11,20],[33,8,12,6,"forceChange"],[33,19,12,17],[33,21,12,19,"current"],[33,28,12,26],[33,29,12,27,"force"],[34,6,13,4],[34,7,13,5],[35,4,14,2],[35,5,14,3],[35,11,14,9],[36,6,15,4,"changePayload"],[36,19,15,17],[36,22,15,20],[37,8,16,6,"forceChange"],[37,19,16,17],[37,21,16,19,"current"],[37,28,16,26],[37,29,16,27,"force"],[37,34,16,32],[37,37,16,35,"previous"],[37,45,16,43],[37,46,16,44,"force"],[38,6,17,4],[38,7,17,5],[39,4,18,2],[40,4,20,2],[40,11,20,9],[41,6,20,11],[41,9,20,14,"current"],[41,16,20,21],[42,6,21,4],[42,9,21,7,"changePayload"],[43,4,22,2],[43,5,22,3],[44,2,23,0],[45,2,25,7],[45,8,25,13,"ForceTouchGesture"],[45,25,25,30],[45,34,25,39,"ContinousBaseGesture"],[45,42,25,59],[45,43,25,59,"ContinousBaseGesture"],[45,63,25,59],[45,64,25,60],[46,4,26,2,"constructor"],[46,15,26,13,"constructor"],[46,16,26,13],[46,18,26,16],[47,6,27,4],[47,11,27,9],[47,12,27,10],[47,13,27,11],[48,6,29,4,"_defineProperty"],[48,21,29,19],[48,22,29,20],[48,26,29,24],[48,28,29,26],[48,36,29,34],[48,38,29,36],[48,39,29,37],[48,40,29,38],[48,41,29,39],[49,6,31,4],[49,10,31,8],[49,11,31,9,"handlerName"],[49,22,31,20],[49,25,31,23],[49,51,31,49],[50,4,32,2],[51,4,33,2],[52,0,34,0],[53,0,35,0],[54,0,36,0],[55,0,37,0],[57,4,40,2,"minForce"],[57,12,40,10,"minForce"],[57,13,40,11,"force"],[57,18,40,16],[57,20,40,18],[58,6,41,4],[58,10,41,8],[58,11,41,9,"config"],[58,17,41,15],[58,18,41,16,"minForce"],[58,26,41,24],[58,29,41,27,"force"],[58,34,41,32],[59,6,42,4],[59,13,42,11],[59,17,42,15],[60,4,43,2],[61,4,44,2],[62,0,45,0],[63,0,46,0],[64,0,47,0],[65,0,48,0],[67,4,51,2,"maxForce"],[67,12,51,10,"maxForce"],[67,13,51,11,"force"],[67,18,51,16],[67,20,51,18],[68,6,52,4],[68,10,52,8],[68,11,52,9,"config"],[68,17,52,15],[68,18,52,16,"maxForce"],[68,26,52,24],[68,29,52,27,"force"],[68,34,52,32],[69,6,53,4],[69,13,53,11],[69,17,53,15],[70,4,54,2],[71,4,55,2],[72,0,56,0],[73,0,57,0],[74,0,58,0],[76,4,61,2,"feedbackOnActivation"],[76,24,61,22,"feedbackOnActivation"],[76,25,61,23,"value"],[76,30,61,28],[76,32,61,30],[77,6,62,4],[77,10,62,8],[77,11,62,9,"config"],[77,17,62,15],[77,18,62,16,"feedbackOnActivation"],[77,38,62,36],[77,41,62,39,"value"],[77,46,62,44],[78,6,63,4],[78,13,63,11],[78,17,63,15],[79,4,64,2],[80,4,66,2,"onChange"],[80,12,66,10,"onChange"],[80,13,66,11,"callback"],[80,21,66,19],[80,23,66,21],[81,6,67,4],[82,6,68,4],[82,10,68,8],[82,11,68,9,"handlers"],[82,19,68,17],[82,20,68,18,"changeEventCalculator"],[82,41,68,39],[82,44,68,42,"changeEventCalculator"],[82,65,68,63],[83,6,69,4],[83,13,69,11],[83,18,69,16],[83,19,69,17,"onChange"],[83,27,69,25],[83,28,69,26,"callback"],[83,36,69,34],[83,37,69,35],[84,4,70,2],[85,2,72,0],[86,0,72,1],[86,3]],"functionMap":{"names":["_defineProperty","<global>","changeEventCalculator","ForceTouchGesture","ForceTouchGesture#constructor","ForceTouchGesture#minForce","ForceTouchGesture#maxForce","ForceTouchGesture#feedbackOnActivation","ForceTouchGesture#onChange"],"mappings":"AAA,iNC;ACI;CDkB;OEE;ECC;GDM;EEQ;GFG;EGQ;GHG;EIO;GJG;EKE;GLI;CFE"},"hasCjsExports":false},"type":"js/module"}]}