{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":49,"index":260}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"ForceTouchGesture\", {\n    enumerable: true,\n    get: function () {\n      return ForceTouchGesture;\n    }\n  });\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const _worklet_6555184671956_init_data = {\n    code: \"function changeEventCalculator_reactNativeGestureHandler_forceTouchGestureJs1(current,previous){let changePayload;if(previous===undefined){changePayload={forceChange:current.force};}else{changePayload={forceChange:current.force-previous.force};}return{...current,...changePayload};}\",\n    location: \"/app/frontend/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/forceTouchGesture.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator_reactNativeGestureHandler_forceTouchGestureJs1\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"forceChange\\\",\\\"force\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/forceTouchGesture.js\\\"],\\\"mappings\\\":\\\"AAIA,SAAAA,oEAAkDA,CAAAC,OAAA,CAAAC,QAAA,EAGhD,GAAI,CAAAC,aAAa,CAEjB,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KACvB,CAAC,CACH,CAAC,IAAM,CACLH,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KAAK,CAAGJ,QAAQ,CAACI,KACxC,CAAC,CACH,CAEA,MAAO,CAAE,GAAGL,OAAO,CACjB,GAAGE,aACL,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\"\n  };\n  const changeEventCalculator = function changeEventCalculator_reactNativeGestureHandler_forceTouchGestureJs1Factory({\n    _worklet_6555184671956_init_data\n  }) {\n    const _e = [new global.Error(), 1, -27];\n    const changeEventCalculator = function (current, previous) {\n      let changePayload;\n      if (previous === undefined) {\n        changePayload = {\n          forceChange: current.force\n        };\n      } else {\n        changePayload = {\n          forceChange: current.force - previous.force\n        };\n      }\n      return Object.assign({}, current, changePayload);\n    };\n    changeEventCalculator.__closure = {};\n    changeEventCalculator.__workletHash = 6555184671956;\n    changeEventCalculator.__pluginVersion = \"0.5.1\";\n    changeEventCalculator.__initData = _worklet_6555184671956_init_data;\n    changeEventCalculator.__stackDetails = _e;\n    return changeEventCalculator;\n  }({\n    _worklet_6555184671956_init_data\n  });\n  class ForceTouchGesture extends _gesture.ContinousBaseGesture {\n    constructor() {\n      super();\n      _defineProperty(this, \"config\", {});\n      this.handlerName = 'ForceTouchGestureHandler';\n    }\n    /**\n     * A minimal pressure that is required before gesture can activate.\n     * Should be a value from range [0.0, 1.0]. Default is 0.2.\n     * @param force\n     */\n\n    minForce(force) {\n      this.config.minForce = force;\n      return this;\n    }\n    /**\n     * A maximal pressure that could be applied for gesture.\n     * If the pressure is greater, gesture fails. Should be a value from range [0.0, 1.0].\n     * @param force\n     */\n\n    maxForce(force) {\n      this.config.maxForce = force;\n      return this;\n    }\n    /**\n     * Value defining if haptic feedback has to be performed on activation.\n     * @param value\n     */\n\n    feedbackOnActivation(value) {\n      this.config.feedbackOnActivation = value;\n      return this;\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, ForceTouchGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n});","lineCount":99,"map":[[7,2,25,0,"Object"],[7,8,25,0],[7,9,25,0,"defineProperty"],[7,23,25,0],[7,24,25,0,"exports"],[7,31,25,0],[8,4,25,0,"enumerable"],[8,14,25,0],[9,4,25,0,"get"],[9,7,25,0],[9,18,25,0,"get"],[9,19,25,0],[10,6,25,0],[10,13,25,0,"ForceTouchGesture"],[10,30,25,0],[11,4,25,0],[12,2,25,0],[13,2,3,0],[13,6,3,0,"_gesture"],[13,14,3,0],[13,17,3,0,"require"],[13,24,3,0],[13,25,3,0,"_dependencyMap"],[13,39,3,0],[14,2,1,0],[14,11,1,9,"_defineProperty"],[14,26,1,24,"_defineProperty"],[14,27,1,25,"obj"],[14,30,1,28],[14,32,1,30,"key"],[14,35,1,33],[14,37,1,35,"value"],[14,42,1,40],[14,44,1,42],[15,4,1,44],[15,8,1,48,"key"],[15,11,1,51],[15,15,1,55,"obj"],[15,18,1,58],[15,20,1,60],[16,6,1,62,"Object"],[16,12,1,68],[16,13,1,69,"defineProperty"],[16,27,1,83],[16,28,1,84,"obj"],[16,31,1,87],[16,33,1,89,"key"],[16,36,1,92],[16,38,1,94],[17,8,1,96,"value"],[17,13,1,101],[17,15,1,103,"value"],[17,20,1,108],[18,8,1,110,"enumerable"],[18,18,1,120],[18,20,1,122],[18,24,1,126],[19,8,1,128,"configurable"],[19,20,1,140],[19,22,1,142],[19,26,1,146],[20,8,1,148,"writable"],[20,16,1,156],[20,18,1,158],[21,6,1,163],[21,7,1,164],[21,8,1,165],[22,4,1,167],[22,5,1,168],[22,11,1,174],[23,6,1,176,"obj"],[23,9,1,179],[23,10,1,180,"key"],[23,13,1,183],[23,14,1,184],[23,17,1,187,"value"],[23,22,1,192],[24,4,1,194],[25,4,1,196],[25,11,1,203,"obj"],[25,14,1,206],[26,2,1,208],[27,2,1,209],[27,8,1,209,"_worklet_6555184671956_init_data"],[27,40,1,209],[28,4,1,209,"code"],[28,8,1,209],[29,4,1,209,"location"],[29,12,1,209],[30,4,1,209,"sourceMap"],[30,13,1,209],[31,2,1,209],[32,2,1,209],[32,8,1,209,"changeEventCalculator"],[32,29,1,209],[32,32,5,0],[32,41,5,0,"changeEventCalculator_reactNativeGestureHandler_forceTouchGestureJs1Factory"],[32,117,5,0],[33,4,5,0,"_worklet_6555184671956_init_data"],[34,2,5,0],[35,4,5,0],[35,10,5,0,"_e"],[35,12,5,0],[35,20,5,0,"global"],[35,26,5,0],[35,27,5,0,"Error"],[35,32,5,0],[36,4,5,0],[36,10,5,0,"changeEventCalculator"],[36,31,5,0],[36,43,5,0,"changeEventCalculator"],[36,44,5,31,"current"],[36,51,5,38],[36,53,5,40,"previous"],[36,61,5,48],[36,63,5,50],[37,6,8,2],[37,10,8,6,"changePayload"],[37,23,8,19],[38,6,10,2],[38,10,10,6,"previous"],[38,18,10,14],[38,23,10,19,"undefined"],[38,32,10,28],[38,34,10,30],[39,8,11,4,"changePayload"],[39,21,11,17],[39,24,11,20],[40,10,12,6,"forceChange"],[40,21,12,17],[40,23,12,19,"current"],[40,30,12,26],[40,31,12,27,"force"],[41,8,13,4],[41,9,13,5],[42,6,14,2],[42,7,14,3],[42,13,14,9],[43,8,15,4,"changePayload"],[43,21,15,17],[43,24,15,20],[44,10,16,6,"forceChange"],[44,21,16,17],[44,23,16,19,"current"],[44,30,16,26],[44,31,16,27,"force"],[44,36,16,32],[44,39,16,35,"previous"],[44,47,16,43],[44,48,16,44,"force"],[45,8,17,4],[45,9,17,5],[46,6,18,2],[47,6,20,2],[47,13,20,2,"Object"],[47,19,20,2],[47,20,20,2,"assign"],[47,26,20,2],[47,31,20,14,"current"],[47,38,20,21],[47,40,21,7,"changePayload"],[47,53,21,20],[48,4,23,0],[48,5,23,1],[49,4,23,1,"changeEventCalculator"],[49,25,23,1],[49,26,23,1,"__closure"],[49,35,23,1],[50,4,23,1,"changeEventCalculator"],[50,25,23,1],[50,26,23,1,"__workletHash"],[50,39,23,1],[51,4,23,1,"changeEventCalculator"],[51,25,23,1],[51,26,23,1,"__pluginVersion"],[51,41,23,1],[52,4,23,1,"changeEventCalculator"],[52,25,23,1],[52,26,23,1,"__initData"],[52,36,23,1],[52,39,23,1,"_worklet_6555184671956_init_data"],[52,71,23,1],[53,4,23,1,"changeEventCalculator"],[53,25,23,1],[53,26,23,1,"__stackDetails"],[53,40,23,1],[53,43,23,1,"_e"],[53,45,23,1],[54,4,23,1],[54,11,23,1,"changeEventCalculator"],[54,32,23,1],[55,2,23,1],[55,3,5,0],[56,4,5,0,"_worklet_6555184671956_init_data"],[57,2,5,0],[58,2,25,7],[58,8,25,13,"ForceTouchGesture"],[58,25,25,30],[58,34,25,39,"ContinousBaseGesture"],[58,42,25,59],[58,43,25,59,"ContinousBaseGesture"],[58,63,25,59],[58,64,25,60],[59,4,26,2,"constructor"],[59,15,26,13,"constructor"],[59,16,26,13],[59,18,26,16],[60,6,27,4],[60,11,27,9],[60,12,27,10],[60,13,27,11],[61,6,29,4,"_defineProperty"],[61,21,29,19],[61,22,29,20],[61,26,29,24],[61,28,29,26],[61,36,29,34],[61,38,29,36],[61,39,29,37],[61,40,29,38],[61,41,29,39],[62,6,31,4],[62,10,31,8],[62,11,31,9,"handlerName"],[62,22,31,20],[62,25,31,23],[62,51,31,49],[63,4,32,2],[64,4,33,2],[65,0,34,0],[66,0,35,0],[67,0,36,0],[68,0,37,0],[70,4,40,2,"minForce"],[70,12,40,10,"minForce"],[70,13,40,11,"force"],[70,18,40,16],[70,20,40,18],[71,6,41,4],[71,10,41,8],[71,11,41,9,"config"],[71,17,41,15],[71,18,41,16,"minForce"],[71,26,41,24],[71,29,41,27,"force"],[71,34,41,32],[72,6,42,4],[72,13,42,11],[72,17,42,15],[73,4,43,2],[74,4,44,2],[75,0,45,0],[76,0,46,0],[77,0,47,0],[78,0,48,0],[80,4,51,2,"maxForce"],[80,12,51,10,"maxForce"],[80,13,51,11,"force"],[80,18,51,16],[80,20,51,18],[81,6,52,4],[81,10,52,8],[81,11,52,9,"config"],[81,17,52,15],[81,18,52,16,"maxForce"],[81,26,52,24],[81,29,52,27,"force"],[81,34,52,32],[82,6,53,4],[82,13,53,11],[82,17,53,15],[83,4,54,2],[84,4,55,2],[85,0,56,0],[86,0,57,0],[87,0,58,0],[89,4,61,2,"feedbackOnActivation"],[89,24,61,22,"feedbackOnActivation"],[89,25,61,23,"value"],[89,30,61,28],[89,32,61,30],[90,6,62,4],[90,10,62,8],[90,11,62,9,"config"],[90,17,62,15],[90,18,62,16,"feedbackOnActivation"],[90,38,62,36],[90,41,62,39,"value"],[90,46,62,44],[91,6,63,4],[91,13,63,11],[91,17,63,15],[92,4,64,2],[93,4,66,2,"onChange"],[93,12,66,10,"onChange"],[93,13,66,11,"callback"],[93,21,66,19],[93,23,66,21],[94,6,67,4],[95,6,68,4],[95,10,68,8],[95,11,68,9,"handlers"],[95,19,68,17],[95,20,68,18,"changeEventCalculator"],[95,41,68,39],[95,44,68,42,"changeEventCalculator"],[95,65,68,63],[96,6,69,4],[96,13,69,11],[96,18,69,16],[96,19,69,17,"onChange"],[96,27,69,25],[96,28,69,26,"callback"],[96,36,69,34],[96,37,69,35],[97,4,70,2],[98,2,72,0],[99,0,72,1],[99,3]],"functionMap":{"names":["_defineProperty","<global>","changeEventCalculator","ForceTouchGesture","ForceTouchGesture#constructor","ForceTouchGesture#minForce","ForceTouchGesture#maxForce","ForceTouchGesture#feedbackOnActivation","ForceTouchGesture#onChange"],"mappings":"AAA,iNC;ACI;CDkB;OEE;ECC;GDM;EEQ;GFG;EGQ;GHG;EIO;GJG;EKE;GLI;CFE"},"hasCjsExports":false},"type":"js/module"}]}