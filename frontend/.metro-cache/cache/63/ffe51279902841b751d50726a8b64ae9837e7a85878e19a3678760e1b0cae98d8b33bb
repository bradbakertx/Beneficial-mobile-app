{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":15,"index":126},"end":{"line":7,"column":35,"index":146}}],"key":"UDLzvLUTPKPQreUSUZ++gAgg2pg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PinchGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        scaleChange: current.scale\n      };\n    } else {\n      changePayload = {\n        scaleChange: current.scale / previous.scale\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  }\n  class PinchGesture extends _gesture.ContinousBaseGesture {\n    constructor() {\n      super();\n      this.handlerName = 'PinchGestureHandler';\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, PinchGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n  exports.PinchGesture = PinchGesture;\n});","lineCount":39,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"PinchGesture"],[7,22,6,20],[7,25,6,23],[7,30,6,28],[7,31,6,29],[8,2,7,0],[8,6,7,4,"_gesture"],[8,14,7,12],[8,17,7,15,"require"],[8,24,7,22],[8,25,7,22,"_dependencyMap"],[8,39,7,22],[8,55,7,34],[8,56,7,35],[9,2,8,0],[9,11,8,9,"changeEventCalculator"],[9,32,8,30,"changeEventCalculator"],[9,33,8,31,"current"],[9,40,8,38],[9,42,8,40,"previous"],[9,50,8,48],[9,52,8,50],[10,4,9,2],[10,13,9,11],[12,4,11,2],[12,8,11,6,"changePayload"],[12,21,11,19],[13,4,12,2],[13,8,12,6,"previous"],[13,16,12,14],[13,21,12,19,"undefined"],[13,30,12,28],[13,32,12,30],[14,6,13,4,"changePayload"],[14,19,13,17],[14,22,13,20],[15,8,14,6,"scaleChange"],[15,19,14,17],[15,21,14,19,"current"],[15,28,14,26],[15,29,14,27,"scale"],[16,6,15,4],[16,7,15,5],[17,4,16,2],[17,5,16,3],[17,11,16,9],[18,6,17,4,"changePayload"],[18,19,17,17],[18,22,17,20],[19,8,18,6,"scaleChange"],[19,19,18,17],[19,21,18,19,"current"],[19,28,18,26],[19,29,18,27,"scale"],[19,34,18,32],[19,37,18,35,"previous"],[19,45,18,43],[19,46,18,44,"scale"],[20,6,19,4],[20,7,19,5],[21,4,20,2],[22,4,21,2],[22,11,21,9],[23,6,22,4],[23,9,22,7,"current"],[23,16,22,14],[24,6,23,4],[24,9,23,7,"changePayload"],[25,4,24,2],[25,5,24,3],[26,2,25,0],[27,2,26,0],[27,8,26,6,"PinchGesture"],[27,20,26,18],[27,29,26,27,"_gesture"],[27,37,26,35],[27,38,26,36,"ContinousBaseGesture"],[27,58,26,56],[27,59,26,57],[28,4,27,2,"constructor"],[28,15,27,13,"constructor"],[28,16,27,13],[28,18,27,16],[29,6,28,4],[29,11,28,9],[29,12,28,10],[29,13,28,11],[30,6,29,4],[30,10,29,8],[30,11,29,9,"handlerName"],[30,22,29,20],[30,25,29,23],[30,46,29,44],[31,4,30,2],[32,4,31,2,"onChange"],[32,12,31,10,"onChange"],[32,13,31,11,"callback"],[32,21,31,19],[32,23,31,21],[33,6,32,4],[34,6,33,4],[34,10,33,8],[34,11,33,9,"handlers"],[34,19,33,17],[34,20,33,18,"changeEventCalculator"],[34,41,33,39],[34,44,33,42,"changeEventCalculator"],[34,65,33,63],[35,6,34,4],[35,13,34,11],[35,18,34,16],[35,19,34,17,"onChange"],[35,27,34,25],[35,28,34,26,"callback"],[35,36,34,34],[35,37,34,35],[36,4,35,2],[37,2,36,0],[38,2,37,0,"exports"],[38,9,37,7],[38,10,37,8,"PinchGesture"],[38,22,37,20],[38,25,37,23,"PinchGesture"],[38,37,37,35],[39,0,37,36],[39,3]],"functionMap":{"names":["<global>","changeEventCalculator","PinchGesture","PinchGesture#constructor","PinchGesture#onChange"],"mappings":"AAA;ACO;CDiB;AEC;ECC;GDG;EEC;GFI;CFC"},"hasCjsExports":true},"type":"js/module"}]}