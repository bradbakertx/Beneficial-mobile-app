{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":15,"index":127},"end":{"line":8,"column":35,"index":147}}],"key":"UDLzvLUTPKPQreUSUZ++gAgg2pg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PinchGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        scaleChange: current.scale\n      };\n    } else {\n      changePayload = {\n        scaleChange: current.scale / previous.scale\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  }\n  class PinchGesture extends _gesture.ContinousBaseGesture {\n    constructor() {\n      super();\n      this.handlerName = 'PinchGestureHandler';\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, PinchGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n  exports.PinchGesture = PinchGesture;\n});","lineCount":39,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"PinchGesture"],[7,22,6,20],[7,25,6,23],[7,30,6,28],[7,31,6,29],[8,2,8,0],[8,6,8,4,"_gesture"],[8,14,8,12],[8,17,8,15,"require"],[8,24,8,22],[8,25,8,22,"_dependencyMap"],[8,39,8,22],[8,55,8,34],[8,56,8,35],[9,2,10,0],[9,11,10,9,"changeEventCalculator"],[9,32,10,30,"changeEventCalculator"],[9,33,10,31,"current"],[9,40,10,38],[9,42,10,40,"previous"],[9,50,10,48],[9,52,10,50],[10,4,11,2],[10,13,11,11],[12,4,13,2],[12,8,13,6,"changePayload"],[12,21,13,19],[13,4,15,2],[13,8,15,6,"previous"],[13,16,15,14],[13,21,15,19,"undefined"],[13,30,15,28],[13,32,15,30],[14,6,16,4,"changePayload"],[14,19,16,17],[14,22,16,20],[15,8,17,6,"scaleChange"],[15,19,17,17],[15,21,17,19,"current"],[15,28,17,26],[15,29,17,27,"scale"],[16,6,18,4],[16,7,18,5],[17,4,19,2],[17,5,19,3],[17,11,19,9],[18,6,20,4,"changePayload"],[18,19,20,17],[18,22,20,20],[19,8,21,6,"scaleChange"],[19,19,21,17],[19,21,21,19,"current"],[19,28,21,26],[19,29,21,27,"scale"],[19,34,21,32],[19,37,21,35,"previous"],[19,45,21,43],[19,46,21,44,"scale"],[20,6,22,4],[20,7,22,5],[21,4,23,2],[22,4,25,2],[22,11,25,9],[23,6,25,11],[23,9,25,14,"current"],[23,16,25,21],[24,6,26,4],[24,9,26,7,"changePayload"],[25,4,27,2],[25,5,27,3],[26,2,28,0],[27,2,30,0],[27,8,30,6,"PinchGesture"],[27,20,30,18],[27,29,30,27,"_gesture"],[27,37,30,35],[27,38,30,36,"ContinousBaseGesture"],[27,58,30,56],[27,59,30,57],[28,4,31,2,"constructor"],[28,15,31,13,"constructor"],[28,16,31,13],[28,18,31,16],[29,6,32,4],[29,11,32,9],[29,12,32,10],[29,13,32,11],[30,6,33,4],[30,10,33,8],[30,11,33,9,"handlerName"],[30,22,33,20],[30,25,33,23],[30,46,33,44],[31,4,34,2],[32,4,36,2,"onChange"],[32,12,36,10,"onChange"],[32,13,36,11,"callback"],[32,21,36,19],[32,23,36,21],[33,6,37,4],[34,6,38,4],[34,10,38,8],[34,11,38,9,"handlers"],[34,19,38,17],[34,20,38,18,"changeEventCalculator"],[34,41,38,39],[34,44,38,42,"changeEventCalculator"],[34,65,38,63],[35,6,39,4],[35,13,39,11],[35,18,39,16],[35,19,39,17,"onChange"],[35,27,39,25],[35,28,39,26,"callback"],[35,36,39,34],[35,37,39,35],[36,4,40,2],[37,2,42,0],[38,2,44,0,"exports"],[38,9,44,7],[38,10,44,8,"PinchGesture"],[38,22,44,20],[38,25,44,23,"PinchGesture"],[38,37,44,35],[39,0,44,36],[39,3]],"functionMap":{"names":["<global>","changeEventCalculator","PinchGesture","PinchGesture#constructor","PinchGesture#onChange"],"mappings":"AAA;ACS;CDkB;AEE;ECC;GDG;EEE;GFI;CFE"},"hasCjsExports":true},"type":"js/module"}]}