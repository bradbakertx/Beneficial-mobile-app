{"dependencies":[{"name":"socket.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"LVgCyxgUdze/lYG0kA6DdCAztfM=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":39,"index":86}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _socketIoClient = require(_dependencyMap[0], \"socket.io-client\");\n  var _expoConstants = require(_dependencyMap[1], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL || '';\n  class SocketService {\n    socket = null;\n    listeners = new Map();\n    connect(token) {\n      if (this.socket?.connected) {\n        console.log('Socket already connected');\n        return;\n      }\n      console.log('Connecting to Socket.IO:', BACKEND_URL);\n      this.socket = (0, _socketIoClient.io)(BACKEND_URL, {\n        auth: {\n          token: token\n        },\n        transports: ['websocket', 'polling'],\n        reconnection: true,\n        reconnectionDelay: 1000,\n        reconnectionAttempts: 5\n      });\n      this.socket.on('connect', () => {\n        console.log('✅ Socket.IO connected:', this.socket?.id);\n      });\n      this.socket.on('disconnect', reason => {\n        console.log('❌ Socket.IO disconnected:', reason);\n      });\n      this.socket.on('connect_error', error => {\n        console.error('Socket.IO connection error:', error);\n      });\n\n      // Set up event listeners\n      this.setupEventListeners();\n    }\n    setupEventListeners() {\n      if (!this.socket) return;\n\n      // Listen for new quotes\n      this.socket.on('new_quote', data => {\n        console.log('📋 New quote received:', data);\n        this.notifyListeners('new_quote', data);\n      });\n\n      // Listen for quote updates\n      this.socket.on('quote_updated', data => {\n        console.log('📋 Quote updated:', data);\n        this.notifyListeners('quote_updated', data);\n      });\n\n      // Listen for new inspections\n      this.socket.on('new_inspection', data => {\n        console.log('🏠 New inspection received:', data);\n        this.notifyListeners('new_inspection', data);\n      });\n\n      // Listen for inspection updates\n      this.socket.on('inspection_updated', data => {\n        console.log('🏠 Inspection updated:', data);\n        this.notifyListeners('inspection_updated', data);\n      });\n\n      // Listen for new messages\n      this.socket.on('new_message', data => {\n        console.log('💬 New message received:', data);\n        this.notifyListeners('new_message', data);\n      });\n\n      // Listen for time slot offers\n      this.socket.on('time_slots_offered', data => {\n        console.log('⏰ Time slots offered:', data);\n        this.notifyListeners('time_slots_offered', data);\n      });\n\n      // Listen for time slot confirmations\n      this.socket.on('time_slot_confirmed', data => {\n        console.log('✅ Time slot confirmed:', data);\n        this.notifyListeners('time_slot_confirmed', data);\n      });\n\n      // Listen for calendar updates\n      this.socket.on('calendar_updated', data => {\n        console.log('📅 Calendar updated:', data);\n        this.notifyListeners('calendar_updated', data);\n      });\n    }\n    notifyListeners(event, data) {\n      const listeners = this.listeners.get(event);\n      if (listeners) {\n        listeners.forEach(callback => callback(data));\n      }\n    }\n    on(event, callback) {\n      if (!this.listeners.has(event)) {\n        this.listeners.set(event, new Set());\n      }\n      this.listeners.get(event)?.add(callback);\n    }\n    off(event, callback) {\n      this.listeners.get(event)?.delete(callback);\n    }\n    disconnect() {\n      if (this.socket) {\n        console.log('Disconnecting Socket.IO');\n        this.socket.disconnect();\n        this.socket = null;\n        this.listeners.clear();\n      }\n    }\n    isConnected() {\n      return this.socket?.connected || false;\n    }\n  }\n  var _default = new SocketService();\n});","lineCount":132,"map":[[12,2,128,0,"Object"],[12,8,128,0],[12,9,128,0,"defineProperty"],[12,23,128,0],[12,24,128,0,"exports"],[12,31,128,0],[13,4,128,0,"enumerable"],[13,14,128,0],[14,4,128,0,"get"],[14,7,128,0],[14,18,128,0,"get"],[14,19,128,0],[15,6,128,0],[15,13,128,0,"_default"],[15,21,128,0],[16,4,128,0],[17,2,128,0],[18,2,1,0],[18,6,1,0,"_socketIoClient"],[18,21,1,0],[18,24,1,0,"require"],[18,31,1,0],[18,32,1,0,"_dependencyMap"],[18,46,1,0],[19,2,2,0],[19,6,2,0,"_expoConstants"],[19,20,2,0],[19,23,2,0,"require"],[19,30,2,0],[19,31,2,0,"_dependencyMap"],[19,45,2,0],[20,2,2,0],[20,6,2,0,"Constants"],[20,15,2,0],[20,18,2,0,"_interopDefault"],[20,33,2,0],[20,34,2,0,"_expoConstants"],[20,48,2,0],[21,2,4,0],[21,8,4,6,"BACKEND_URL"],[21,19,4,17],[21,22,4,20,"Constants"],[21,31,4,29],[21,32,4,29,"default"],[21,39,4,29],[21,40,4,30,"expoConfig"],[21,50,4,40],[21,52,4,42,"extra"],[21,57,4,47],[21,59,4,49,"EXPO_PUBLIC_BACKEND_URL"],[21,82,4,72],[21,86,4,76,"process"],[21,93,4,83],[21,94,4,84,"env"],[21,97,4,87],[21,98,4,88,"EXPO_PUBLIC_BACKEND_URL"],[21,121,4,111],[21,125,4,115],[21,127,4,117],[22,2,6,0],[22,8,6,6,"SocketService"],[22,21,6,19],[22,22,6,20],[23,4,7,10,"socket"],[23,10,7,16],[23,13,7,34],[23,17,7,38],[24,4,8,10,"listeners"],[24,13,8,19],[24,16,8,50],[24,20,8,54,"Map"],[24,23,8,57],[24,24,8,58],[24,25,8,59],[25,4,10,2,"connect"],[25,11,10,9,"connect"],[25,12,10,10,"token"],[25,17,10,23],[25,19,10,25],[26,6,11,4],[26,10,11,8],[26,14,11,12],[26,15,11,13,"socket"],[26,21,11,19],[26,23,11,21,"connected"],[26,32,11,30],[26,34,11,32],[27,8,12,6,"console"],[27,15,12,13],[27,16,12,14,"log"],[27,19,12,17],[27,20,12,18],[27,46,12,44],[27,47,12,45],[28,8,13,6],[29,6,14,4],[30,6,16,4,"console"],[30,13,16,11],[30,14,16,12,"log"],[30,17,16,15],[30,18,16,16],[30,44,16,42],[30,46,16,44,"BACKEND_URL"],[30,57,16,55],[30,58,16,56],[31,6,18,4],[31,10,18,8],[31,11,18,9,"socket"],[31,17,18,15],[31,20,18,18],[31,24,18,18,"io"],[31,39,18,20],[31,40,18,20,"io"],[31,42,18,20],[31,44,18,21,"BACKEND_URL"],[31,55,18,32],[31,57,18,34],[32,8,19,6,"auth"],[32,12,19,10],[32,14,19,12],[33,10,20,8,"token"],[33,15,20,13],[33,17,20,15,"token"],[34,8,21,6],[34,9,21,7],[35,8,22,6,"transports"],[35,18,22,16],[35,20,22,18],[35,21,22,19],[35,32,22,30],[35,34,22,32],[35,43,22,41],[35,44,22,42],[36,8,23,6,"reconnection"],[36,20,23,18],[36,22,23,20],[36,26,23,24],[37,8,24,6,"reconnectionDelay"],[37,25,24,23],[37,27,24,25],[37,31,24,29],[38,8,25,6,"reconnectionAttempts"],[38,28,25,26],[38,30,25,28],[39,6,26,4],[39,7,26,5],[39,8,26,6],[40,6,28,4],[40,10,28,8],[40,11,28,9,"socket"],[40,17,28,15],[40,18,28,16,"on"],[40,20,28,18],[40,21,28,19],[40,30,28,28],[40,32,28,30],[40,38,28,36],[41,8,29,6,"console"],[41,15,29,13],[41,16,29,14,"log"],[41,19,29,17],[41,20,29,18],[41,44,29,42],[41,46,29,44],[41,50,29,48],[41,51,29,49,"socket"],[41,57,29,55],[41,59,29,57,"id"],[41,61,29,59],[41,62,29,60],[42,6,30,4],[42,7,30,5],[42,8,30,6],[43,6,32,4],[43,10,32,8],[43,11,32,9,"socket"],[43,17,32,15],[43,18,32,16,"on"],[43,20,32,18],[43,21,32,19],[43,33,32,31],[43,35,32,34,"reason"],[43,41,32,40],[43,45,32,45],[44,8,33,6,"console"],[44,15,33,13],[44,16,33,14,"log"],[44,19,33,17],[44,20,33,18],[44,47,33,45],[44,49,33,47,"reason"],[44,55,33,53],[44,56,33,54],[45,6,34,4],[45,7,34,5],[45,8,34,6],[46,6,36,4],[46,10,36,8],[46,11,36,9,"socket"],[46,17,36,15],[46,18,36,16,"on"],[46,20,36,18],[46,21,36,19],[46,36,36,34],[46,38,36,37,"error"],[46,43,36,42],[46,47,36,47],[47,8,37,6,"console"],[47,15,37,13],[47,16,37,14,"error"],[47,21,37,19],[47,22,37,20],[47,51,37,49],[47,53,37,51,"error"],[47,58,37,56],[47,59,37,57],[48,6,38,4],[48,7,38,5],[48,8,38,6],[50,6,40,4],[51,6,41,4],[51,10,41,8],[51,11,41,9,"setupEventListeners"],[51,30,41,28],[51,31,41,29],[51,32,41,30],[52,4,42,2],[53,4,44,10,"setupEventListeners"],[53,23,44,29,"setupEventListeners"],[53,24,44,29],[53,26,44,32],[54,6,45,4],[54,10,45,8],[54,11,45,9],[54,15,45,13],[54,16,45,14,"socket"],[54,22,45,20],[54,24,45,22],[56,6,47,4],[57,6,48,4],[57,10,48,8],[57,11,48,9,"socket"],[57,17,48,15],[57,18,48,16,"on"],[57,20,48,18],[57,21,48,19],[57,32,48,30],[57,34,48,33,"data"],[57,38,48,37],[57,42,48,42],[58,8,49,6,"console"],[58,15,49,13],[58,16,49,14,"log"],[58,19,49,17],[58,20,49,18],[58,44,49,42],[58,46,49,44,"data"],[58,50,49,48],[58,51,49,49],[59,8,50,6],[59,12,50,10],[59,13,50,11,"notifyListeners"],[59,28,50,26],[59,29,50,27],[59,40,50,38],[59,42,50,40,"data"],[59,46,50,44],[59,47,50,45],[60,6,51,4],[60,7,51,5],[60,8,51,6],[62,6,53,4],[63,6,54,4],[63,10,54,8],[63,11,54,9,"socket"],[63,17,54,15],[63,18,54,16,"on"],[63,20,54,18],[63,21,54,19],[63,36,54,34],[63,38,54,37,"data"],[63,42,54,41],[63,46,54,46],[64,8,55,6,"console"],[64,15,55,13],[64,16,55,14,"log"],[64,19,55,17],[64,20,55,18],[64,39,55,37],[64,41,55,39,"data"],[64,45,55,43],[64,46,55,44],[65,8,56,6],[65,12,56,10],[65,13,56,11,"notifyListeners"],[65,28,56,26],[65,29,56,27],[65,44,56,42],[65,46,56,44,"data"],[65,50,56,48],[65,51,56,49],[66,6,57,4],[66,7,57,5],[66,8,57,6],[68,6,59,4],[69,6,60,4],[69,10,60,8],[69,11,60,9,"socket"],[69,17,60,15],[69,18,60,16,"on"],[69,20,60,18],[69,21,60,19],[69,37,60,35],[69,39,60,38,"data"],[69,43,60,42],[69,47,60,47],[70,8,61,6,"console"],[70,15,61,13],[70,16,61,14,"log"],[70,19,61,17],[70,20,61,18],[70,49,61,47],[70,51,61,49,"data"],[70,55,61,53],[70,56,61,54],[71,8,62,6],[71,12,62,10],[71,13,62,11,"notifyListeners"],[71,28,62,26],[71,29,62,27],[71,45,62,43],[71,47,62,45,"data"],[71,51,62,49],[71,52,62,50],[72,6,63,4],[72,7,63,5],[72,8,63,6],[74,6,65,4],[75,6,66,4],[75,10,66,8],[75,11,66,9,"socket"],[75,17,66,15],[75,18,66,16,"on"],[75,20,66,18],[75,21,66,19],[75,41,66,39],[75,43,66,42,"data"],[75,47,66,46],[75,51,66,51],[76,8,67,6,"console"],[76,15,67,13],[76,16,67,14,"log"],[76,19,67,17],[76,20,67,18],[76,44,67,42],[76,46,67,44,"data"],[76,50,67,48],[76,51,67,49],[77,8,68,6],[77,12,68,10],[77,13,68,11,"notifyListeners"],[77,28,68,26],[77,29,68,27],[77,49,68,47],[77,51,68,49,"data"],[77,55,68,53],[77,56,68,54],[78,6,69,4],[78,7,69,5],[78,8,69,6],[80,6,71,4],[81,6,72,4],[81,10,72,8],[81,11,72,9,"socket"],[81,17,72,15],[81,18,72,16,"on"],[81,20,72,18],[81,21,72,19],[81,34,72,32],[81,36,72,35,"data"],[81,40,72,39],[81,44,72,44],[82,8,73,6,"console"],[82,15,73,13],[82,16,73,14,"log"],[82,19,73,17],[82,20,73,18],[82,46,73,44],[82,48,73,46,"data"],[82,52,73,50],[82,53,73,51],[83,8,74,6],[83,12,74,10],[83,13,74,11,"notifyListeners"],[83,28,74,26],[83,29,74,27],[83,42,74,40],[83,44,74,42,"data"],[83,48,74,46],[83,49,74,47],[84,6,75,4],[84,7,75,5],[84,8,75,6],[86,6,77,4],[87,6,78,4],[87,10,78,8],[87,11,78,9,"socket"],[87,17,78,15],[87,18,78,16,"on"],[87,20,78,18],[87,21,78,19],[87,41,78,39],[87,43,78,42,"data"],[87,47,78,46],[87,51,78,51],[88,8,79,6,"console"],[88,15,79,13],[88,16,79,14,"log"],[88,19,79,17],[88,20,79,18],[88,43,79,41],[88,45,79,43,"data"],[88,49,79,47],[88,50,79,48],[89,8,80,6],[89,12,80,10],[89,13,80,11,"notifyListeners"],[89,28,80,26],[89,29,80,27],[89,49,80,47],[89,51,80,49,"data"],[89,55,80,53],[89,56,80,54],[90,6,81,4],[90,7,81,5],[90,8,81,6],[92,6,83,4],[93,6,84,4],[93,10,84,8],[93,11,84,9,"socket"],[93,17,84,15],[93,18,84,16,"on"],[93,20,84,18],[93,21,84,19],[93,42,84,40],[93,44,84,43,"data"],[93,48,84,47],[93,52,84,52],[94,8,85,6,"console"],[94,15,85,13],[94,16,85,14,"log"],[94,19,85,17],[94,20,85,18],[94,44,85,42],[94,46,85,44,"data"],[94,50,85,48],[94,51,85,49],[95,8,86,6],[95,12,86,10],[95,13,86,11,"notifyListeners"],[95,28,86,26],[95,29,86,27],[95,50,86,48],[95,52,86,50,"data"],[95,56,86,54],[95,57,86,55],[96,6,87,4],[96,7,87,5],[96,8,87,6],[98,6,89,4],[99,6,90,4],[99,10,90,8],[99,11,90,9,"socket"],[99,17,90,15],[99,18,90,16,"on"],[99,20,90,18],[99,21,90,19],[99,39,90,37],[99,41,90,40,"data"],[99,45,90,44],[99,49,90,49],[100,8,91,6,"console"],[100,15,91,13],[100,16,91,14,"log"],[100,19,91,17],[100,20,91,18],[100,42,91,40],[100,44,91,42,"data"],[100,48,91,46],[100,49,91,47],[101,8,92,6],[101,12,92,10],[101,13,92,11,"notifyListeners"],[101,28,92,26],[101,29,92,27],[101,47,92,45],[101,49,92,47,"data"],[101,53,92,51],[101,54,92,52],[102,6,93,4],[102,7,93,5],[102,8,93,6],[103,4,94,2],[104,4,96,10,"notifyListeners"],[104,19,96,25,"notifyListeners"],[104,20,96,26,"event"],[104,25,96,39],[104,27,96,41,"data"],[104,31,96,50],[104,33,96,52],[105,6,97,4],[105,12,97,10,"listeners"],[105,21,97,19],[105,24,97,22],[105,28,97,26],[105,29,97,27,"listeners"],[105,38,97,36],[105,39,97,37,"get"],[105,42,97,40],[105,43,97,41,"event"],[105,48,97,46],[105,49,97,47],[106,6,98,4],[106,10,98,8,"listeners"],[106,19,98,17],[106,21,98,19],[107,8,99,6,"listeners"],[107,17,99,15],[107,18,99,16,"forEach"],[107,25,99,23],[107,26,99,24,"callback"],[107,34,99,32],[107,38,99,36,"callback"],[107,46,99,44],[107,47,99,45,"data"],[107,51,99,49],[107,52,99,50],[107,53,99,51],[108,6,100,4],[109,4,101,2],[110,4,103,2,"on"],[110,6,103,4,"on"],[110,7,103,5,"event"],[110,12,103,18],[110,14,103,20,"callback"],[110,22,103,38],[110,24,103,40],[111,6,104,4],[111,10,104,8],[111,11,104,9],[111,15,104,13],[111,16,104,14,"listeners"],[111,25,104,23],[111,26,104,24,"has"],[111,29,104,27],[111,30,104,28,"event"],[111,35,104,33],[111,36,104,34],[111,38,104,36],[112,8,105,6],[112,12,105,10],[112,13,105,11,"listeners"],[112,22,105,20],[112,23,105,21,"set"],[112,26,105,24],[112,27,105,25,"event"],[112,32,105,30],[112,34,105,32],[112,38,105,36,"Set"],[112,41,105,39],[112,42,105,40],[112,43,105,41],[112,44,105,42],[113,6,106,4],[114,6,107,4],[114,10,107,8],[114,11,107,9,"listeners"],[114,20,107,18],[114,21,107,19,"get"],[114,24,107,22],[114,25,107,23,"event"],[114,30,107,28],[114,31,107,29],[114,33,107,31,"add"],[114,36,107,34],[114,37,107,35,"callback"],[114,45,107,43],[114,46,107,44],[115,4,108,2],[116,4,110,2,"off"],[116,7,110,5,"off"],[116,8,110,6,"event"],[116,13,110,19],[116,15,110,21,"callback"],[116,23,110,39],[116,25,110,41],[117,6,111,4],[117,10,111,8],[117,11,111,9,"listeners"],[117,20,111,18],[117,21,111,19,"get"],[117,24,111,22],[117,25,111,23,"event"],[117,30,111,28],[117,31,111,29],[117,33,111,31,"delete"],[117,39,111,37],[117,40,111,38,"callback"],[117,48,111,46],[117,49,111,47],[118,4,112,2],[119,4,114,2,"disconnect"],[119,14,114,12,"disconnect"],[119,15,114,12],[119,17,114,15],[120,6,115,4],[120,10,115,8],[120,14,115,12],[120,15,115,13,"socket"],[120,21,115,19],[120,23,115,21],[121,8,116,6,"console"],[121,15,116,13],[121,16,116,14,"log"],[121,19,116,17],[121,20,116,18],[121,45,116,43],[121,46,116,44],[122,8,117,6],[122,12,117,10],[122,13,117,11,"socket"],[122,19,117,17],[122,20,117,18,"disconnect"],[122,30,117,28],[122,31,117,29],[122,32,117,30],[123,8,118,6],[123,12,118,10],[123,13,118,11,"socket"],[123,19,118,17],[123,22,118,20],[123,26,118,24],[124,8,119,6],[124,12,119,10],[124,13,119,11,"listeners"],[124,22,119,20],[124,23,119,21,"clear"],[124,28,119,26],[124,29,119,27],[124,30,119,28],[125,6,120,4],[126,4,121,2],[127,4,123,2,"isConnected"],[127,15,123,13,"isConnected"],[127,16,123,13],[127,18,123,25],[128,6,124,4],[128,13,124,11],[128,17,124,15],[128,18,124,16,"socket"],[128,24,124,22],[128,26,124,24,"connected"],[128,35,124,33],[128,39,124,37],[128,44,124,42],[129,4,125,2],[130,2,126,0],[131,2,128,0],[131,6,128,0,"_default"],[131,14,128,0],[131,17,128,15],[131,21,128,19,"SocketService"],[131,34,128,32],[131,35,128,33],[131,36,128,34],[132,0,128,35],[132,3]],"functionMap":{"names":["<global>","SocketService","SocketService#connect","on$argument_1","SocketService#setupEventListeners","SocketService#notifyListeners","listeners.forEach$argument_0","SocketService#on","SocketService#off","SocketService#disconnect","SocketService#isConnected"],"mappings":"AAA;ACK;ECI;8BCkB;KDE;iCCE;KDE;oCCE;KDE;GDI;EGE;gCDI;KCG;oCDG;KCG;qCDG;KCG;yCDG;KCG;kCDG;KCG;yCDG;KCG;0CDG;KCG;uCDG;KCG;GHC;EIE;wBCG,0BD;GJE;EME;GNK;EOE;GPE;EQE;GRO;ESE;GTE;CDC"},"hasCjsExports":false},"type":"js/module"}]}