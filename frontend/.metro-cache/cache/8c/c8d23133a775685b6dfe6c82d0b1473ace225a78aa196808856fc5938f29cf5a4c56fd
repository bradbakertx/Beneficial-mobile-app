{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"PinchGesture\", {\n    enumerable: true,\n    get: function () {\n      return PinchGesture;\n    }\n  });\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function changeEventCalculator(current, previous) {\n    'worklet';\n\n    let changePayload;\n    if (previous === undefined) {\n      changePayload = {\n        scaleChange: current.scale\n      };\n    } else {\n      changePayload = {\n        scaleChange: current.scale / previous.scale\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  }\n  class PinchGesture extends _gesture.ContinousBaseGesture {\n    constructor() {\n      super();\n      this.handlerName = 'PinchGestureHandler';\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, PinchGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n});","lineCount":43,"map":[[7,2,23,0,"Object"],[7,8,23,0],[7,9,23,0,"defineProperty"],[7,23,23,0],[7,24,23,0,"exports"],[7,31,23,0],[8,4,23,0,"enumerable"],[8,14,23,0],[9,4,23,0,"get"],[9,7,23,0],[9,18,23,0,"get"],[9,19,23,0],[10,6,23,0],[10,13,23,0,"PinchGesture"],[10,25,23,0],[11,4,23,0],[12,2,23,0],[13,2,1,0],[13,6,1,0,"_gesture"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,3,0],[14,11,3,9,"changeEventCalculator"],[14,32,3,30,"changeEventCalculator"],[14,33,3,31,"current"],[14,40,3,38],[14,42,3,40,"previous"],[14,50,3,48],[14,52,3,50],[15,4,4,2],[15,13,4,11],[17,4,6,2],[17,8,6,6,"changePayload"],[17,21,6,19],[18,4,8,2],[18,8,8,6,"previous"],[18,16,8,14],[18,21,8,19,"undefined"],[18,30,8,28],[18,32,8,30],[19,6,9,4,"changePayload"],[19,19,9,17],[19,22,9,20],[20,8,10,6,"scaleChange"],[20,19,10,17],[20,21,10,19,"current"],[20,28,10,26],[20,29,10,27,"scale"],[21,6,11,4],[21,7,11,5],[22,4,12,2],[22,5,12,3],[22,11,12,9],[23,6,13,4,"changePayload"],[23,19,13,17],[23,22,13,20],[24,8,14,6,"scaleChange"],[24,19,14,17],[24,21,14,19,"current"],[24,28,14,26],[24,29,14,27,"scale"],[24,34,14,32],[24,37,14,35,"previous"],[24,45,14,43],[24,46,14,44,"scale"],[25,6,15,4],[25,7,15,5],[26,4,16,2],[27,4,18,2],[27,11,18,9],[28,6,18,11],[28,9,18,14,"current"],[28,16,18,21],[29,6,19,4],[29,9,19,7,"changePayload"],[30,4,20,2],[30,5,20,3],[31,2,21,0],[32,2,23,7],[32,8,23,13,"PinchGesture"],[32,20,23,25],[32,29,23,34,"ContinousBaseGesture"],[32,37,23,54],[32,38,23,54,"ContinousBaseGesture"],[32,58,23,54],[32,59,23,55],[33,4,24,2,"constructor"],[33,15,24,13,"constructor"],[33,16,24,13],[33,18,24,16],[34,6,25,4],[34,11,25,9],[34,12,25,10],[34,13,25,11],[35,6,26,4],[35,10,26,8],[35,11,26,9,"handlerName"],[35,22,26,20],[35,25,26,23],[35,46,26,44],[36,4,27,2],[37,4,29,2,"onChange"],[37,12,29,10,"onChange"],[37,13,29,11,"callback"],[37,21,29,19],[37,23,29,21],[38,6,30,4],[39,6,31,4],[39,10,31,8],[39,11,31,9,"handlers"],[39,19,31,17],[39,20,31,18,"changeEventCalculator"],[39,41,31,39],[39,44,31,42,"changeEventCalculator"],[39,65,31,63],[40,6,32,4],[40,13,32,11],[40,18,32,16],[40,19,32,17,"onChange"],[40,27,32,25],[40,28,32,26,"callback"],[40,36,32,34],[40,37,32,35],[41,4,33,2],[42,2,35,0],[43,0,35,1],[43,3]],"functionMap":{"names":["<global>","changeEventCalculator","PinchGesture","PinchGesture#constructor","PinchGesture#onChange"],"mappings":"AAA;ACE;CDkB;OEE;ECC;GDG;EEE;GFI;CFE"},"hasCjsExports":false},"type":"js/module"}]}